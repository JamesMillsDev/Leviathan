<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Application.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Config.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Game.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\GameObjects\GameObjectManager.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\GameObjects\GameObject.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\GameObjects\Component.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\GameObjects\TextureComponent.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\GameObjects\TransformComponent.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\GameStates\GameStateManager.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\GameStates\IGameState.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Leviathan.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Physics\PhysicsManager.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Physics\Rigidbody.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Resources\Resource.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Resources\Resources.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Resources\TextureResource.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Singleton.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\ThirdParty\pugiconfig.hpp" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\ThirdParty\pugixml.hpp" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\ThirdParty\raygui.h" />
    <ClInclude Include="..\..\Dependencies\include\Leviathan\Window.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Application.cpp" />
    <ClCompile Include="Config.cpp" />
    <ClCompile Include="GameObjects\GameObject.cpp" />
    <ClCompile Include="GameObjects\GameObjectManager.cpp" />
    <ClCompile Include="GameObjects\TextureComponent.cpp" />
    <ClCompile Include="GameObjects\TransformComponent.cpp" />
    <ClCompile Include="GameStates\GameStateManager.cpp" />
    <ClCompile Include="Physics\PhysicsManager.cpp" />
    <ClCompile Include="Physics\Rigidbody.cpp" />
    <ClCompile Include="Resources\Resources.cpp" />
    <ClCompile Include="Resources\TextureResource.cpp" />
    <ClCompile Include="Third Party\pugixml.cpp" />
    <ClCompile Include="Window.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="cpp.hint" />
    <None Include="packages.config" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{8becee34-e7da-4dcb-9d8d-150880adaad1}</ProjectGuid>
    <RootNamespace>Leviathan</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(SolutionDir)Dependencies\lib\Leviathan\</OutDir>
    <IntDir>$(SolutionDir)Intermediate\$(ProjectName)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)Dependencies\lib\Leviathan\</OutDir>
    <IntDir>$(SolutionDir)Intermediate\$(ProjectName)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)Dependencies\lib\Leviathan\</OutDir>
    <IntDir>$(SolutionDir)Intermediate\$(ProjectName)\$(Configuration)\</IntDir>
    <raylib_LibraryType>DynamicRelease</raylib_LibraryType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)Dependencies\lib\Leviathan\</OutDir>
    <IntDir>$(SolutionDir)Intermediate\$(ProjectName)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DLL_EXPORT;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <AdditionalIncludeDirectories>$(SolutionDir)Dependencies\include;</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>Leviamath.lib;winmm.lib;kernel32.lib;opengl32.lib;gdi32.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)Dependencies\lib\Leviathan\;$(SolutionDir)Dependencies\lib\raylib\;</AdditionalLibraryDirectories>
    </Link>
    <Lib>
      <AdditionalDependencies>Leviamath.lib;winmm.lib;kernel32.lib;opengl32.lib;gdi32.lib;</AdditionalDependencies>
    </Lib>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)Dependencies\lib\Leviathan\;$(SolutionDir)Dependencies\lib\raylib\;</AdditionalLibraryDirectories>
    </Lib>
    <PostBuildEvent>
      <Command>copy /Y "$(OutDir)$(ProjectName).dll" "$(SolutionDir)Builds\$(ProjectName).dll"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>SET path=$(SolutionDir)Builds
if not exist "%path%" mkdir "%path%"</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DLL_EXPORT;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <AdditionalIncludeDirectories>$(SolutionDir)Dependencies\include;</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>Leviamath.lib;winmm.lib;kernel32.lib;opengl32.lib;gdi32.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)Dependencies\lib\Leviathan\;$(SolutionDir)Dependencies\lib\raylib\;</AdditionalLibraryDirectories>
    </Link>
    <Lib>
      <AdditionalDependencies>Leviamath.lib;winmm.lib;kernel32.lib;opengl32.lib;gdi32.lib;</AdditionalDependencies>
    </Lib>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)Dependencies\lib\Leviathan\;$(SolutionDir)Dependencies\lib\raylib\;</AdditionalLibraryDirectories>
    </Lib>
    <PostBuildEvent>
      <Command>copy /Y "$(OutDir)$(ProjectName).dll" "$(SolutionDir)Builds\$(ProjectName).dll"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>SET path=$(SolutionDir)Builds
if not exist "%path%" mkdir "%path%"</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DLL_EXPORT;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <AdditionalIncludeDirectories>$(SolutionDir)Dependencies\include;</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>Leviamath.lib;winmm.lib;kernel32.lib;opengl32.lib;gdi32.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)Dependencies\lib\Leviathan\;</AdditionalLibraryDirectories>
    </Link>
    <Lib>
      <AdditionalDependencies>Leviamath.lib;winmm.lib;kernel32.lib;opengl32.lib;gdi32.lib;</AdditionalDependencies>
    </Lib>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)Dependencies\lib\Leviathan\;$(SolutionDir)Dependencies\lib\raylib\;</AdditionalLibraryDirectories>
    </Lib>
    <PostBuildEvent>
      <Command>copy /Y "$(OutDir)$(ProjectName).dll" "$(SolutionDir)Builds\$(ProjectName).dll"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>SET path=$(SolutionDir)Builds
if not exist "%path%" mkdir "%path%"</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DLL_EXPORT;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <AdditionalIncludeDirectories>$(SolutionDir)Dependencies\include;</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>Leviamath.lib;winmm.lib;kernel32.lib;opengl32.lib;gdi32.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)Dependencies\lib\Leviathan\;$(SolutionDir)Dependencies\lib\raylib\;</AdditionalLibraryDirectories>
    </Link>
    <Lib>
      <AdditionalDependencies>Leviamath.lib;winmm.lib;kernel32.lib;opengl32.lib;gdi32.lib;</AdditionalDependencies>
    </Lib>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDir)Dependencies\lib\Leviathan\;$(SolutionDir)Dependencies\lib\raylib\;</AdditionalLibraryDirectories>
    </Lib>
    <PostBuildEvent>
      <Command>copy /Y "$(OutDir)$(ProjectName).dll" "$(SolutionDir)Builds\$(ProjectName).dll"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>SET path=$(SolutionDir)Builds
if not exist "%path%" mkdir "%path%"</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\..\packages\raylib.4.5.0\build\native\raylib.targets" Condition="Exists('..\..\packages\raylib.4.5.0\build\native\raylib.targets')" />
    <Import Project="..\..\packages\Box2D.2.3.0\build\native\Box2D.targets" Condition="Exists('..\..\packages\Box2D.2.3.0\build\native\Box2D.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\..\packages\raylib.4.5.0\build\native\raylib.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\raylib.4.5.0\build\native\raylib.targets'))" />
    <Error Condition="!Exists('..\..\packages\Box2D.2.3.0\build\native\Box2D.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Box2D.2.3.0\build\native\Box2D.targets'))" />
  </Target>
</Project>